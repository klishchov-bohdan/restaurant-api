version: "3.9"

services:
  db:
    image: postgres:15.1-alpine
    container_name: restaurant
    command: -p ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-postgres:/var/lib/postgresql/data
    networks:
      - my-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-p", "1221"]
      interval: 5s
      timeout: 5s
      retries: 5

  db_test:
    image: postgres:15.1-alpine
    container_name: restaurant_test
    command: -p ${TEST_POSTGRES_PORT}
    ports:
      - ${TEST_POSTGRES_PORT}:${TEST_POSTGRES_PORT}
    expose:
      - ${TEST_POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DB}
    volumes:
      - db-postgres-test:/var/lib/postgresql/data
    networks:
      - my-net
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-p", "1222" ]
      interval: 5s
      timeout: 5s
      retries: 5

  cache-redis:
    image: redis:7.2-alpine
    hostname: cache_redis
    container_name: cache_redis
    restart: on-failure
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    command: redis-server
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - cache:/data
    networks:
      - my-net

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASSWORD}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_PORT_WEB}:${RABBITMQ_PORT_WEB}
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - my-net

  celery:
    build:
      context: .
    container_name: celery_app
    env_file:
      - .env.prod
    command: [ "./docker/celery.sh", "celery" ]
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net
    depends_on:
      db:
        condition: service_healthy
      cache-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  flower:
    build:
      context: .
    container_name: flower_app
    env_file:
      - .env.prod
    command: [ "./docker/celery.sh", "flower" ]
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net
    depends_on:
      - celery
    ports:
      - 8888:5555

  app:
    build:
      context: .
    env_file:
      - .env.prod
    container_name: api
    command: ["./docker/app.sh"]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      cache-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net

  app_tests:
    build:
      context: .
    container_name: api_tests
    command: ["./docker/app_test.sh"]
    env_file:
      - .env.prod
#    ports:
#      - "9999:8000"
    depends_on:
      db_test:
        condition: service_healthy
      cache-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net

volumes:
  db-postgres:
    driver: local
  db-postgres-test:
    driver: local
  cache:
    driver: local


networks:
  my-net:
    external: true
