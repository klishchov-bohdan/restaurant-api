version: "3.9"

services:
  db:
    image: postgres:15.1-alpine
    container_name: restaurant
    command: -p 1221
    ports:
      - "1221:1221"
    expose:
      - 1221
    env_file:
      - .env.prod
    volumes:
      - db-postgres:/var/lib/postgresql/data
    networks:
      - my-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-p", "1221"]
      interval: 5s
      timeout: 5s
      retries: 5

  db_test:
    image: postgres:15.1-alpine
    container_name: restaurant_test
    command: -p 1222
    ports:
      - "1222:1222"
    expose:
      - 1222
    env_file:
      - .env.test
    volumes:
      - db-postgres-test:/var/lib/postgresql/data
    networks:
      - my-net
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-p", "1222" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    env_file:
      - .env.prod
    container_name: api
    command: ["./docker/app.sh"]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net

  app_tests:
    build:
      context: .
    env_file:
      - .env.test
    container_name: api_tests
    command: ["./docker/app_test.sh"]
#    ports:
#      - "9999:8000"
    depends_on:
      db_test:
        condition: service_healthy
    volumes:
      - ./app:/home/restaurant/app
    networks:
      - my-net

volumes:
  db-postgres:
    driver: local
  db-postgres-test:
    driver: local


networks:
  my-net:
    external: true